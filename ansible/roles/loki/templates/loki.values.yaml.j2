loki:
  auth_enabled: false
  commonConfig:
    replication_factor: 1
  storage:
    type: s3
    bucketNames:
      chunks: '{{ loki_chunks_bucket }}'
      ruler: '{{ loki_ruler_bucket }}'
      admin: '{{ loki_admin_bucket }}'
    s3:
{% if not aws_deployment %}
      endpoint: '{{ s3_endpoint }}'
{% endif %}
      region: '{{ s3_region }}'
      insecure: {{ s3_allow_http | ternary('true', 'false') }}
      s3ForcePathStyle: {{ s3_force_path_style | ternary('true', 'false') }}
  schemaConfig:
    configs:
      - from: '2024-04-01'
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h
  ruler:
    enable_api: true
    storage:
      type: s3
      bucketNames:
        chunks: '{{ loki_chunks_bucket }}'
        ruler: '{{ loki_ruler_bucket }}'
        admin: '{{ loki_admin_bucket }}'
      s3:
{% if not aws_deployment %}
        endpoint: '{{ s3_endpoint }}'
{% endif %}
        region: '{{ s3_region }}'
        insecure: {{ s3_allow_http | ternary('true', 'false') }}
        s3ForcePathStyle: {{ s3_force_path_style | ternary('true', 'false') }}

minio:
  enabled: false

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: {{ ((s3_manage_secrets | string | lower) == 'true') | ternary(omit, loki_writer_role_arn) }}

deploymentMode: SingleBinary

singleBinary:
  replicas: 1
  persistence:
    enabled: true 
    storageClass: '{{ use_custom_storage_classes | ternary(loki_storage_class, omit) }}'
  resources: {{ loki_resources | to_json }}
  serviceAccount:
    create: true
    name: ''
    annotations:
{% if (s3_manage_secrets | string | lower) == 'true' %}
      {}
{% else %}
      eks.amazonaws.com/role-arn: '{{ loki_writer_role_arn }}'
{% endif %}
{% if (s3_manage_secrets | string | lower) == 'true' %}
  extraEnv:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: loki-secrets
          key: AWS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-secrets
          key: AWS_SECRET_ACCESS_KEY
{% endif %}

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
